pipeline {
    agent none
    environment {
        SCANNER_HOME = '/opt/sonar-scanner' // Replace with your SonarQube scanner path within the Docker container
    }
    stages {
        stage('Back-end') {
            agent {
                docker {
                    image 'maven:3.8.1-adoptopenjdk-11'
                }
            }
            steps {
                git 'https://github.com/gkdevops/PetClinic.git'
                sh 'mvn --version' 
            }
        }
        
        stage('Front-end') {
            agent {
                docker { 
                    image 'node:16-alpine'
                }
            }
            steps {
                sh 'node --version'
            }
        }
        
        stage('SonarQube Scan') {
            when {
                expression { params.env_name == 'master' }
            }
            agent {
                docker { 
                    image 'sonarqube'
                }
            }
            steps {
                git 'https://github.com/gkdevops/PetClinic.git'
                script {
                    sh "${env.SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=sonar-project.properties"
                }
            }
        }
    }
}
